{"ast":null,"code":"var _jsxFileName = \"C:\\\\lixo\\\\ChamadosApi\\\\chamados-frontend\\\\src\\\\components\\\\ConsultaChamados.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ConsultaChamados = () => {\n  _s();\n  const [chamados, setChamados] = useState([]);\n  const [error, setError] = useState('');\n  useEffect(() => {\n    const carregarChamados = async () => {\n      try {\n        const token = localStorage.getItem('token'); // Obtém o token do localStorage\n        const response = await axios.get('http://localhost:5216/api/chamados', {\n          headers: {\n            Authorization: `Bearer ${token}` // Envia o token no cabeçalho\n          }\n        });\n        setChamados(response.data); // Assumindo que a API retorna uma lista de chamados\n      } catch (error) {\n        console.error('Erro ao carregar os chamados:', error);\n        setError('Erro ao carregar os chamados');\n      }\n    };\n    carregarChamados();\n  }, []); // Executa apenas uma vez ao carregar o componente\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Lista de Chamados\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: chamados.map(chamado => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: chamado.titulo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 25\n        }, this), \": \", chamado.descricao]\n      }, chamado.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n_s(ConsultaChamados, \"E7r2za6COQRLmfYXhpOtOKyDuKU=\");\n_c = ConsultaChamados;\nexport default ConsultaChamados;\nvar _c;\n$RefreshReg$(_c, \"ConsultaChamados\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","ConsultaChamados","_s","chamados","setChamados","error","setError","carregarChamados","token","localStorage","getItem","response","get","headers","Authorization","data","console","children","fileName","_jsxFileName","lineNumber","columnNumber","map","chamado","titulo","descricao","id","_c","$RefreshReg$"],"sources":["C:/lixo/ChamadosApi/chamados-frontend/src/components/ConsultaChamados.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst ConsultaChamados = () => {\r\n    const [chamados, setChamados] = useState([]);\r\n    const [error, setError] = useState('');\r\n\r\n    useEffect(() => {\r\n        const carregarChamados = async () => {\r\n            try {\r\n                const token = localStorage.getItem('token'); // Obtém o token do localStorage\r\n                const response = await axios.get('http://localhost:5216/api/chamados', {\r\n                    headers: {\r\n                        Authorization: `Bearer ${token}` // Envia o token no cabeçalho\r\n                    }\r\n                });\r\n                setChamados(response.data); // Assumindo que a API retorna uma lista de chamados\r\n            } catch (error) {\r\n                console.error('Erro ao carregar os chamados:', error);\r\n                setError('Erro ao carregar os chamados');\r\n            }\r\n        };\r\n\r\n        carregarChamados();\r\n    }, []); // Executa apenas uma vez ao carregar o componente\r\n\r\n    return (\r\n        <div>\r\n            <h2>Lista de Chamados</h2>\r\n            {error && <p>{error}</p>}\r\n            <ul>\r\n                {chamados.map(chamado => (\r\n                    <li key={chamado.id}>\r\n                        <strong>{chamado.titulo}</strong>: {chamado.descricao}\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ConsultaChamados;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACQ,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAEtCD,SAAS,CAAC,MAAM;IACZ,MAAMW,gBAAgB,GAAG,MAAAA,CAAA,KAAY;MACjC,IAAI;QACA,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC;QAC7C,MAAMC,QAAQ,GAAG,MAAMb,KAAK,CAACc,GAAG,CAAC,oCAAoC,EAAE;UACnEC,OAAO,EAAE;YACLC,aAAa,EAAE,UAAUN,KAAK,EAAE,CAAC;UACrC;QACJ,CAAC,CAAC;QACFJ,WAAW,CAACO,QAAQ,CAACI,IAAI,CAAC,CAAC,CAAC;MAChC,CAAC,CAAC,OAAOV,KAAK,EAAE;QACZW,OAAO,CAACX,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;QACrDC,QAAQ,CAAC,8BAA8B,CAAC;MAC5C;IACJ,CAAC;IAEDC,gBAAgB,CAAC,CAAC;EACtB,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,oBACIP,OAAA;IAAAiB,QAAA,gBACIjB,OAAA;MAAAiB,QAAA,EAAI;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACzBhB,KAAK,iBAAIL,OAAA;MAAAiB,QAAA,EAAIZ;IAAK;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACxBrB,OAAA;MAAAiB,QAAA,EACKd,QAAQ,CAACmB,GAAG,CAACC,OAAO,iBACjBvB,OAAA;QAAAiB,QAAA,gBACIjB,OAAA;UAAAiB,QAAA,EAASM,OAAO,CAACC;QAAM;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAS,CAAC,MAAE,EAACE,OAAO,CAACE,SAAS;MAAA,GADhDF,OAAO,CAACG,EAAE;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEf,CACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEd,CAAC;AAACnB,EAAA,CApCID,gBAAgB;AAAA0B,EAAA,GAAhB1B,gBAAgB;AAsCtB,eAAeA,gBAAgB;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}